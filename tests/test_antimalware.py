import unittest
import json
import os
from dsmigrator.antimalware import *
from tests.am_testdata import *
from tests.allofpolicy import *

OLD_API_KEY = os.environ.get("OLD_API_KEY")
OLD_HOST = os.environ.get("OLD_HOST")
NEW_API_KEY = os.environ.get("NEW_API_KEY")
NEW_HOST = os.environ.get("NEW_HOST")
cert = False


class testAM(unittest.TestCase):
    def test_json_to_list(self):
        json_dict = json.loads(test_json)
        self.assertEqual(
            json_to_list(json_dict, "name", []),
            ["Advanced Real-Time Scan Configuration"],
            "Should be Advanced Real-Time Scan Configuration",
        )

    def test_AMconfigtenant1(self):
        self.assertEqual(
            AMconfigtenant1(initial_antimalwareconfig, OLD_HOST, OLD_API_KEY),
            (
                initial_directorylist,
                initial_fileextensionlist,
                initial_filelist,
                t1getallamconfig,
            ),
            "Error in Get AM Config",
        )

    def test_AmReplaceConfig(self):
        self.assertEqual(
            AmReplaceConfig(allofpolicy_after_ips, test_allamconfigdict),
            allofpolicy_after_am,
            "Error in replace config",
        )


if __name__ == "__main__":
    unittest.main()
